
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Channels;
using System.Threading.Tasks;
using ExercisesLectureTwo;

namespace ExercisesLectureTwo
{
    class Answers
    {
        public static void Main(string[] args)

        {
            Exercise1 exercise1 = new Exercise1();
            exercise1.Exerc1();

            Exercise2 exercise2 = new Exercise2();
            exercise2.Exerc2();

            Exercise3 exercise3 = new Exercise3();
            exercise3.Exerc3();

            Exercise4 exercise4 = new Exercise4();
            exercise4.Exerc4();

            Exercise5 exercise5 = new Exercise5();
            exercise5.Exerc5();

            Exercise6 exercise6 = new Exercise6();
            exercise6.Exerc6();

            Exercise7 exercise7 = new Exercise7();
            exercise7.Exerc7();

            Exercise8 exercise8 = new Exercise8();
            exercise8.Exerc8();

            Exercise9 exercise9 = new Exercise9();
            exercise9.Exerc9();

            Exercise10 exercise10 = new Exercise10();
            exercise10.Exerc10();

            Exercise11 exercise11 = new Exercise11();
            exercise11.Exerc11();

            Exercise12 exercise12 = new Exercise12();
            exercise12.Exerc12();
        }
    }
}


//1.შემოწმება, რიცხვი დადებითია თუ უარყოფითი
//დაწერეთ პროგრამა, რომელიც იღებს მთელ რიცხვს და ამოწმებს, არის თუ არა რიცხვი დადებითი, უარყოფითი, ან ნულოვანი.
//2. შემოწმება, რიცხვი ლუწია თუ კენტი
//დაწერეთ პროგრამა, რომელიც იღებს მთელ რიცხვს და ამოწმებს, არის თუ არა ის ლუწი ან კენტი.
//3. შეფასების კატეგორიზაცია
//დაწერეთ პროგრამა, რომელიც იღებს სტუდენტის ქულას (0-დან 100-მდე) და ბეჭდავს შესაბამის ნიშანს შემდეგი სკალის მიხედვით:
//90 - 100: A
//80-89: B
//70-79: C
//60-69: D
//0-59: F
//4. ნაკიანი წლის შემოწმება
//დაწერეთ პროგრამა, რომელიც ამოწმებს, არის თუ არა წელი ნაკიანი. წელი ნაკიანია თუ:
//იყოფა 4-ზე, მაგრამ
//არ იყოფა 100-ზე, თუ ის ასევე არ იყოფა 400-ზე.
//5. პაროლის შემოწმება
//დაწერეთ პროგრამა, რომელიც იღებს მომხმარებლის შეყვანილ პაროლს და ამოწმებს, ემთხვევა თუ არა ის წინასწარ განსაზღვრულ პაროლს (მაგალითად, "secret123"). თუ ემთხვევა, დაბეჭდეთ "Access Granted", თუ არ ემთხვევა, დაბეჭდეთ "Access Forbidden".
//6. სამი რიცხვიდან ყველაზე დიდის პოვნა
//დაწერეთ პროგრამა, რომელიც იღებს სამ რიცხვს და ბეჭდავს მათგან ყველაზე დიდს.
//7. მარტივი კალკულატორი
//დაწერეთ პროგრამა, რომელიც მომხმარებლის შეყვანის საფუძველზე ასრულებს მარტივ არითმეტიკულ ოპერაციებს (დამატება, გამოკლება, გამრავლება ან გაყოფა) ორ რიცხვზე.

//8. არჩევნების უფლებამოსილება
//დაწერეთ პროგრამა, რომელიც ამოწმებს, არის თუ არა პირი არჩევნებში ხმის მიცემისთვის უფლებამოსილი. პირი უნდა იყოს 18 წლის ან უფროსი.
//9. დღის მისალმება საათის მიხედვით
//დაწერეთ პროგრამა, რომელიც იღებს მიმდინარე დროს (საათების მიხედვით) და განსაზღვრავს შესაფერის მისალმებას:
//დილა(5:00 - 11:59)(Good Morning)
//შუადღე(12:00 - 16:59)(Good Afternoon)
//საღამო(17:00 - 20:59)(Good Evening)
//ღამე(21:00 - 4:59)(Good Night)
//10.შოპინგის ფასდაკლების კალკულატორი
//დაწერეთ პროგრამა, რომელიც ითვლის ჯამურ თანხას ფასდაკლების შემდეგ, შემდეგი წესებით:
//თუ შესყიდვის საერთო თანხა ნაკლებია $100-ზე, არ არის ფასდაკლება.
//თუ შესყიდვის საერთო თანხა არის $100 და $500 შორის, გამოიყენეთ 10% ფასდაკლება.
//თუ შესყიდვის საერთო თანხა $500-ზე მეტია, გამოიყენეთ 20% ფასდაკლება.
//11. ასაკობრივი და ქვეყნის შეზღუდვების მიხედვით პროდუქტის შეძენა
//დაწერეთ პროგრამა, რომელიც ამოწმებს, შეუძლია თუ არა მომხმარებელს პროდუქტის შეძენა ასაკის და ქვეყნის მიხედვით. პროდუქტის შეზღუდვები ასეთია:
//აშშ - ში მომხმარებელი უნდა იყოს 21 წლის ან უფროსი.
//სხვა ქვეყნებში, მომხმარებელი უნდა იყოს 18 წლის ან უფროსი. თუ მომხმარებელი უფლებამოსილია შეძენისათვის, დაბეჭდეთ "შეძენა ნებადართულია", წინააღმდეგ შემთხვევაში "შეძენა აკრძალულია".
//12. სესხის უფლებამოსილება
//დაწერეთ პროგრამა, რომელიც განსაზღვრავს, არის თუ არა პირი სესხის მისაღებად უფლებამოსილი. პირობებია:
//პირი უნდა იყოს 18 წლის ან უფროსი.
//პირს უნდა ჰქონდეს მინიმუმ $25,000 წლიური შემოსავალი.
//თუ პირს შემოსავალი ნაკლები აქვს $25,000-ზე, ის შეიძლება იყოს უფლებამოსილი თანამონაწილის (თავდების) ყოლის შემთხვევაში.

